#include "opencv2/highgui.hpp"
#include "opencv2/imgproc.hpp"
#include "opencv2/video/background_segm.hpp"
#include "opencv2/imgproc.hpp"
#include "opencv2/highgui.hpp"
#include <iostream>
using namespace cv;
using namespace std;

//Define variables and constants
#define radius 5
#define thickness 3
// After how many loops does it take a picture of your hand, assumes hand is there after this many loops
#define loopCountSeconds 60
//points where the data will be taken
vector<Point> points;


void initializePoints()
{
    // to quickly move whole figure
    int xOffset = 200;
    int yOffset = 0;
    // points vaguely in the shape of a hand
    points.push_back(Point(300 + xOffset ,300 + yOffset));
    points.push_back(Point(380 + xOffset ,300 + yOffset));
    points.push_back(Point(340 + xOffset ,250 + yOffset));
    points.push_back(Point(370 + xOffset ,220 + yOffset));
    points.push_back(Point(310 + xOffset ,220 + yOffset));
    points.push_back(Point(360 + xOffset ,190 + yOffset));
    points.push_back(Point(320 + xOffset ,190 + yOffset));
}

void drawPoints(Mat frame)
{
    Scalar red(255,0,0);
    for(auto iter=points.begin();iter!=points.end();++iter)
    {
        circle(frame, *iter, radius, red, thickness);        
    }
    
}

void getColor()
{
    for(auto iter=points.begin();iter!=points.end();++iter)
    {
    }
}
int main(int argc, char const *argv[])
{
    initializePoints();
    VideoCapture cap(0); // open the default camera
    if(!cap.isOpened())  // check if we succeeded
        return -1;

    BackgroundSubtractorMOG2 mog2;

    Mat edges;
    Mat frame;

    Mat fgMaskMOG; //foreground mask generated by MOG method

    bool scanned = false;
    for(int loopcount=0;;loopcount++)
    {
        // get a new frame from camera
        cap >> frame; 
        // flip the image horizonatally to get mirror effect
        flip(frame,frame,1);
        if (!scanned)
            drawPoints(frame);
        if (!scanned && loopcount > loopCountSeconds){
            getColor();
            scanned=!scanned;
        }
        // mog2(frame, fgMaskMOG);
        // imshow("fram", fgMaskMOG);
        imshow("frame", frame);
        if(waitKey(30) >= 0) break; //exit on some key
    }

    
    return 0;
}

